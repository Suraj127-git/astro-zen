---
import Section from "./Section.astro";
import { Image } from "astro:assets";
import type { ProjectProps } from "@types";

interface Props {
  blog: ProjectProps[];
}

const { blog } = Astro.props;
---

<Section text="Featured Blog" href="blog">
  <div class="relative overflow-hidden">
    <div id="blog-carousel" class="flex snap-x snap-mandatory overflow-x-auto gap-8 pb-8 hide-scrollbar">
      {blog.map(({ name, summary, image, linkPreview }, index) => {
        const top = 98 + index * 40;
        return (
          <div style={`top: ${top}px;`} class="snap-center flex-shrink-0 w-[90%] md:w-[600px]">
            <div class="rounded-2xl border border-neutral/20 bg-black">
              <div class="w-full h-[580px] md:h-96 relative z-[1] bg-[#1c232d]/85 bg-difu before:content-[''] before:rounded-2xl before:absolute before:z-[-1] before:opacity-[5%] before:inset-0 before:bg-[url(/raja.png)] before:bg-repeat before:bg-[length:128px] rounded-2xl grid grid-rows-2 sm:grid-rows-1 sm:grid-cols-2">
                <div class="px-6 pt-12">
                  <h3 class="text-3xl font-medium font-serif mb-5 text-primary">
                    {name}
                  </h3>
                  <p class="text-neutral text-base">{summary}</p>
                  <div class="pt-10 flex gap-5 text-white">
                    <a
                      href={linkPreview}
                      target="_blank"
                      class="hover:underline after:content-[url(/external.svg)] after:relative after:bottom-[-5px]"
                    >
                      Preview
                    </a>
                  </div>
                </div>
                <div class="flex items-end justify-end overflow-hidden">
                  <Image
                    src={image}
                    width={580}
                    height={580}
                    alt={name}
                    class="object-cover rounded-br-2xl"
                  />
                </div>
              </div>
            </div>
          </div>
        );
      })}
    </div>
    <button
      class="absolute left-4 top-1/2 -translate-y-1/2 bg-black/50 p-2 rounded-full hover:bg-black/75 transition-colors z-10"
      onclick="document.getElementById('blog-carousel').scrollBy({left: -300, behavior: 'smooth'})"
    >
      <span class="sr-only">Previous</span>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-white">
        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
      </svg>
    </button>
    <button
      class="absolute right-4 top-1/2 -translate-y-1/2 bg-black/50 p-2 rounded-full hover:bg-black/75 transition-colors z-10"
      onclick="document.getElementById('blog-carousel').scrollBy({left: 300, behavior: 'smooth'})"
    >
      <span class="sr-only">Next</span>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-white">
        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
      </svg>
    </button>
  </div>
</Section>

<script>
  function autoScroll(elementId: string, speed: number = 2) {
    const carousel = document.getElementById(elementId);
    if (!carousel) return;

    let scrollAmount = 0;
    const slideTimer = setInterval(() => {
      carousel.scrollLeft += speed;
      scrollAmount += speed;

      if (scrollAmount >= carousel.scrollWidth - carousel.clientWidth) {
        carousel.scrollLeft = 0;
        scrollAmount = 0;
      }
    }, 30);

    carousel.addEventListener('mouseover', () => clearInterval(slideTimer));
    carousel.addEventListener('mouseout', () => autoScroll(elementId, speed));
  }

  document.addEventListener('astro:page-load', () => {
    autoScroll('blog-carousel');
  });
</script>

<style>
  .hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }
</style>
